@mixin henris-check-color($el: '.input-check-color') {
	#{$el} {
		height: auto;
		width: auto;
		padding: 0;
		margin: 0;
		@content;
		label {
			display: block;
			margin-top: 0;
			padding: 0;
			padding-left: 2rem;
			line-height: 2;
			position: relative;
			&:after,
			&:before {
				content: '';
			}
		}
		input[type='checkbox'],
		input[type='radio'] {
			-webkit-appearance: none;
			-moz-appearance: none;
			appearance: none;
			width: 0;
			height: 0;
			margin: 0;
			padding: 0;
			position: absolute;
			opacity: 0;
			&:focus {
				label {
					border: 2px solid red;
				}
				label:before {
					box-shadow: 0 2px 0 0 rgba($primary-color, 0.25);
				}
			}
		}

		label:before {
			display: block;
			position: absolute;
			left: 0;
			top: 0.25em;
			width: 1.5em;
			height: 1.5em;
			border-radius: 50%;
			box-shadow: 0 2px 0 0 rgba($color-light, 0.15);
			background-color: var(--check-color);
		}

		label:after {
			display: block;
			position: absolute;
			left: 0.5em;
			top: 0.75em;
			width: 0.5em;
			height: 0.5em;
			background-color: $color-light;
			border-radius: 50%;
			transform: scale(0);
		}
		input:checked {
			& + label:after {
				animation: inputCheckColorPop 0.3s forwards;
			}
		}
	}
	@keyframes inputCheckColorPop {
		0% {
			transform: scale(0);
		}
		75% {
			transform: scale(1.2);
		}
		100% {
			transform: scale(1);
		}
	}
	@if output('form-input-colored') {
		@each $colorName, $colorValue in $colors {
			#{$el}--#{$colorName} {
				label:before {
					background-color: var(--check-color, #{$colorValue});
					box-shadow: 0 2px 0 0 var(--check-color, #{darken($colorValue, 20%)});
				}
				label:after {
					background-color: contra($colorName);
				}
			}
		}
	}
	#{$el}--nolabel,
	.input-check--nolabel {
		label {
			text-indent: -999em;
		}
	}
}

@if output(form-check-color) {
	@include henris-check-color();
}
